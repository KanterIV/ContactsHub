{"version":3,"file":"static/js/704.a005c8a3.chunk.js","mappings":"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","sources":["redux/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactsList.module.css?c071","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectItems, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsForm\":\"ContactForm_contactsForm__6k3Pf\",\"contactsFormBtn\":\"ContactForm_contactsFormBtn__+ADVC\",\"contactsFormInput\":\"ContactForm_contactsFormInput__jGZ7D\"};","import { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from 'redux/contactsSelectors';\nimport { addContact } from 'redux/contactsReducer';\nimport { toastRejected } from 'services/userNotifications';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = contactData => {\n    const hasContactDuplicate = contacts.some(\n      contact => contact.name.toLowerCase() === contactData.name.toLowerCase()\n    );\n\n    if (hasContactDuplicate) {\n      toastRejected(`${contactData.name} is already in your contacts!`);\n      return;\n    }\n\n    dispatch(addContact(contactData));\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={css.contactsForm}>\n      <label>\n        Name\n        <input\n          {...register('name', { required: true })}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Alex\"\n        />\n        {errors.name && <span>This field is required</span>}\n      </label>\n      <label>\n        Phone\n        <input\n          {...register('phone', { required: true })}\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          placeholder=\"066-123-45-67\"\n        />\n        {errors.phone && <span>This field is required</span>}\n      </label>\n      <label>\n        Email\n        <input\n          {...register('email', { required: true })}\n          type=\"email\"\n          placeholder=\"youremail@gmail.com\"\n        />\n        {errors.email && <span>This field is required</span>}\n      </label>\n      <button type=\"submit\" className={css.contactsFormBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__7sAfD\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__A4sXv\",\"deleteBtn\":\"ContactListItem_deleteBtn__roUYm\"};","import css from './ContactListItem.module.css';\n\nexport const ContactListItem = ({\n  contactId,\n  contactName,\n  contactNumber,\n  deleteContact,\n}) => {\n  return (\n    <li className={css.contactListItem}>\n      <p>{`${contactName}: `}</p>\n      <span>{contactNumber}</span>\n      <button\n        className={css.deleteBtn}\n        onClick={() => deleteContact(contactId)}\n        type=\"button\"\n        name={contactId}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n","import css from './ContactsList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contactsReducer';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { selectVisibleContacts } from 'redux/contactsSelectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contactsArr = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const hanldeDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ul className={css.contactsList}>\n      {contactsArr.length !== 0 &&\n        contactsArr.map(contact => {\n          const { _id, name, phone } = contact;\n          return (\n            <ContactListItem\n              key={_id}\n              contactId={_id}\n              contactName={name}\n              contactNumber={phone}\n              deleteContact={hanldeDeleteContact}\n            />\n          );\n        })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { setFilter } from 'redux/contactsReducer';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterInputChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <>\n      <p>Fined contacts by name</p>\n      <input\n        className={css.filterInput}\n        onChange={handleFilterInputChange}\n        type=\"text\"\n        name=\"filter\"\n      />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport React from 'react';\nimport { Grid } from 'react-loader-spinner';\nimport { useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { selectError, selectIsLoading } from 'redux/contactsSelectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      {isLoading && (\n        <Grid\n          height=\"80\"\n          width=\"80\"\n          color=\"#4fa94d\"\n          ariaLabel=\"grid-loading\"\n          radius=\"12.5\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {error && <ToastContainer />}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useForm","register","handleSubmit","reset","errors","formState","onSubmit","contactData","some","toastRejected","addContact","className","css","required","type","pattern","title","placeholder","phone","email","ContactListItem","contactId","contactName","contactNumber","deleteContact","onClick","ContactList","contactsArr","useEffect","fetchContacts","hanldeDeleteContact","length","map","_id","Filter","onChange","event","setFilter","target","value","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}