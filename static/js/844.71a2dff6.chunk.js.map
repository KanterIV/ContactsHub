{"version":3,"file":"static/js/844.71a2dff6.chunk.js","mappings":"yOAEaA,E,QAAmBC,GAAAA,IAAH,8S,SCW7B,EAXuB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OACE,SAACF,EAAD,CACEG,UAAWD,GAAQ,UAAOA,GAC1BE,IAAKC,EACLC,IAAI,mBACJC,MAAM,OAGX,C,2KCTYC,EAAiBC,EAAAA,KAAaC,MAAM,CAC/CC,KAAMF,EAAAA,KAEHG,SAAS,0BACTC,IAAI,EAAG,sCACPC,IAAI,GAAI,gBAEXC,MAAON,EAAAA,KAEJG,SAAS,4BACTG,MAAM,iBAETC,SAAUP,EAAAA,KAEPI,IAAI,EAAG,0CACPC,IAAI,GAAI,0B,SC6Db,EArEiB,WAAO,IAAD,MACfG,GAAWC,EAAAA,EAAAA,MACjB,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYb,GACtBc,KAAM,cALNC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAMTE,GAAWC,EAAAA,EAAAA,MAUjB,OACE,iCACE,SAACC,EAAA,EAAD,CAAgB3B,SAAS,kBACzB,iBAAKC,UAAU,0BAAf,WACE,eAAIA,UAAU,sBAAd,SAAoC,cACpC,cAAGA,UAAU,qBAAb,SAAkC,yGAIlC,kBAAM2B,SAAUN,GAjBL,SAAAO,GACfJ,GAASK,EAAAA,EAAAA,IAAgBD,IACtBE,SACAC,MAAK,WACJjB,EAAS,SACV,GACJ,IAWK,WACE,8BACE,oCACMM,EAAS,SADf,IAEEpB,UAAS,gBAAWsB,EAAOd,KAAO,cAAgB,GAAzC,KACTwB,KAAK,OACLC,YAAY,UAEbX,EAAOd,OAAQ,oCAAOc,EAAOd,YAAd,aAAO,EAAa0B,cAEtC,8BACE,oCACMd,EAAS,UADf,IAEEpB,UAAS,gBAAWsB,EAAOV,MAAQ,cAAgB,GAA1C,KACToB,KAAK,QACLC,YAAY,WAEbX,EAAOV,QAAS,oCAAOU,EAAOV,aAAd,aAAO,EAAcsB,cAExC,8BACE,oCACMd,EAAS,aADf,IAEEpB,UAAS,gBAAWsB,EAAOT,SAAW,cAAgB,GAA7C,KACTmB,KAAK,OACLC,YAAY,cAEbX,EAAOT,WAAY,oCAAOS,EAAOT,gBAAd,aAAO,EAAiBqB,cAG9C,mBAAQF,KAAK,SAAb,SAAsB,iBAExB,SAAC,KAAD,CAAMhC,UAAU,aAAamC,GAAG,SAAhC,SAAyC,eAMhD,C","sources":["components/MainAppPicture/MainAppPicture.styled.js","components/MainAppPicture/MainAppPicture.jsx","utils/helpers/schemas/registerSchema.js","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledAppPicture = styled.img`\n  width: 246px;\n\n  @media screen and (max-width: 767px) {\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 320px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 498px;\n  }\n`;\n","import MainPicture from '../../assets/images/girl.png';\nimport { StyledAppPicture } from './MainAppPicture.styled';\nconst MainAppPicture = ({ imgClass }) => {\n  return (\n    <StyledAppPicture\n      className={imgClass && `${imgClass}`}\n      src={MainPicture}\n      alt=\"main app picture\"\n      width=\"626\"\n    />\n  );\n};\n\nexport default MainAppPicture;\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Please enter your name')\n    .min(2, 'Name must be at least 2 characters')\n    .max(32, 'To long name'),\n\n  email: yup\n    .string()\n    .required('Please enter your e-mail')\n    .email('Invalid email'),\n\n  password: yup\n    .string()\n    .min(6, 'Password must be at least 6 characters')\n    .max(64, 'Password is too long'),\n});\n","import MainAppPicture from 'components/MainAppPicture/MainAppPicture';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { newUserRegister } from 'redux/authReducer';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { registerSchema } from 'utils/helpers/schemas/registerSchema';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(registerSchema),\n    mode: 'onTouched',\n  });\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(newUserRegister(data))\n      .unwrap()\n      .then(() => {\n        navigate('/login');\n      });\n  };\n\n  return (\n    <>\n      <MainAppPicture imgClass=\"register-img\" />\n      <div className=\"register-form-container\">\n        <h2 className=\"register-form-title\">Register</h2>\n        <p className=\"register-form-text\">\n          To start using our services, please fill out the registration form\n          below. All fields are mandatory:\n        </p>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <label>\n            <input\n              {...register('name')}\n              className={`input ${errors.name ? 'error-input' : ''} `}\n              type=\"text\"\n              placeholder=\"Name\"\n            />\n            {errors.name && <span>{errors.name?.message}</span>}\n          </label>\n          <label>\n            <input\n              {...register('email')}\n              className={`input ${errors.email ? 'error-input' : ''} `}\n              type=\"email\"\n              placeholder=\"Email\"\n            />\n            {errors.email && <span>{errors.email?.message}</span>}\n          </label>\n          <label>\n            <input\n              {...register('password')}\n              className={`input ${errors.password ? 'error-input' : ''} `}\n              type=\"text\"\n              placeholder=\"Password\"\n            />\n            {errors.password && <span>{errors.password?.message}</span>}\n          </label>\n\n          <button type=\"submit\">Register</button>\n        </form>\n        <Link className=\"login-link\" to=\"/login\">\n          Login\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["StyledAppPicture","styled","imgClass","className","src","MainPicture","alt","width","registerSchema","yup","shape","name","required","min","max","email","password","navigate","useNavigate","useForm","resolver","yupResolver","mode","register","handleSubmit","errors","formState","dispatch","useDispatch","MainAppPicture","onSubmit","data","newUserRegister","unwrap","then","type","placeholder","message","to"],"sourceRoot":""}